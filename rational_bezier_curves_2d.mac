/*

https://github.com/t-o-k/Maxima-bezier/rational_bezier_curves_2d.mac

Copyright (c) 2020 Tor Olav Kristensen, http://subcube.com

Use of this source code is governed by the GNU Lesser General Public License version 3, which can be found in the LICENSE file.

*/

load("draw")$

load("bezier")$

tau: 2*%pi$

angle: tau/4/2;  /* No. of parts is 4 */

weights: matrix([ 1, cos(angle), 1 ]);

points1_x: matrix([ 3, 5, 5 ])$

points1_y: matrix([ 2, 2, 4 ])$

points2_x: matrix([ 5, 5, 3 ])$

points2_y: matrix([ 4, 6, 6 ])$

points3_x: matrix([ 3, 1, 1 ])$

points3_y: matrix([ 6, 6, 4 ])$

points4_x: matrix([ 1, 1, 3 ])$

points4_y: matrix([ 4, 2, 2 ])$

define(f1_x(s), rational_bezier_function_1a(points1_x, weights, s));

define(f1_y(s), rational_bezier_function_1a(points1_y, weights, s));

define(f2_x(s), rational_bezier_function_1a(points2_x, weights, s));

define(f2_y(s), rational_bezier_function_1a(points2_y, weights, s));

define(f3_x(s), rational_bezier_function_1a(points3_x, weights, s));

define(f3_y(s), rational_bezier_function_1a(points3_y, weights, s));

define(f4_x(s), rational_bezier_function_1a(points4_x, weights, s));

define(f4_y(s), rational_bezier_function_1a(points4_y, weights, s));

curve_1: [ parametric, f1_x(s), f1_y(s), [ s, 0, 1 ] ]$

curve_2: [ parametric, f2_x(s), f2_y(s), [ s, 0, 1 ] ]$

curve_3: [ parametric, f3_x(s), f3_y(s), [ s, 0, 1 ] ]$

curve_4: [ parametric, f4_x(s), f4_y(s), [ s, 0, 1 ] ]$

plot2d([ curve_1, curve_2, curve_3, curve_4 ]);
/* Note that since the aspect ratio is not 1 the circle appears as an ellipse. */
